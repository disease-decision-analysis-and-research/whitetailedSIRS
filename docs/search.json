[{"path":"/articles/sir_model_description.html","id":"beta-definitions","dir":"Articles","previous_headings":"","what":"2.3. \\(\\beta\\) Definitions","title":"sir_model_description","text":"Several \\(\\beta\\) values included model incorporate various direct transmission pathways (superscripts outlined Section 2.2) wild deer, captive deer, humans (subscripts outlined Section 2.2). basic structure \\(\\beta\\) values product proximity contact rate infection probability given contact.","code":""},{"path":"/articles/sir_model_description.html","id":"aerosol-transmission","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions","what":"2.3.1. Aerosol Transmission","title":"sir_model_description","text":"Aerosolized transmission rates (\\(\\beta^{Aero}\\)) product rate susceptible individual enters shared airspace infected individual (within 1.5m) probability infection given proximity. detail deer-deer proximity rates wild, captivity, across fence lines separating settings (Section 2.3.1.1), human-deer proximity rates wild captive environments (Section 2.3.1.2), infection probability given proximity (Section 2.3.1.3). build transmission rates (\\(\\beta^{Aero}\\)) deer humans deer various settings (Section 2.3.1.4).","code":""},{"path":"/articles/sir_model_description.html","id":"deer-deer-proximity-rates","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions > 2.3.1. Aerosol Transmission","what":"2.3.1.1. Deer-deer proximity rates","title":"sir_model_description","text":"Wild deer - per capita rate proximity deer wild likely density dependent, though previous research concluded frequency-dependent (proportion population infected) transmission plays role well disease ecology (Smith et al. 2009). Habib et al. (2011) estimated intermediate density dependence across various densities white-tailed deer habitat availability eastern Alberta, Canada. use Habib et al.’s (2011) calculation daily proximity rate using varying deer densities seasonal variation white-tailed deer behavior (\\(\\sigma_{season}\\); estimated Williams et al. 2014; Table 1, Appendix 2). estimate intermediate density dependence using deer per 100 km2 match inferences original model developed Habib et al. (2011). \\[\\begin{align} \\text{proximity rate, wild} \\sim \\sigma_{season} \\cdot c \\bigg( \\frac{N^{1-q}}{} \\bigg) \\end{align}\\] : - \\(\\sigma_{season}\\) : season scaling (derived Williams et al 2014; Appendix ) - \\(c\\) : contact scaling constant (influences slope density-contact relationship; reported Habib et al. 2011; Appendix ) - \\(N\\) : total population size - \\(q\\) : concavity scaling constant (0-1, 0 equating density dependence 1 equating frequency dependence; reported Habib et al. 2011, Appendix ) - \\(\\) : area inhabited N Captive deer - per capita rate proximity deer captivity unstudied likely highly dependent facility type practices. lower density facilities mimic natural densities natural conditions estimate proximity rates based calculation wild populations (Eq. 11). use expert-elicited estimates deer proximity rates (proximity events per day) higher intensity captive operations (\\(c_{CC}\\)). Fence line interactions – estimate per capita proximity rates along fence lines separating wild captive deer herds using multiple estimates derived literature (\\(c_{WC}\\)).","code":""},{"path":"/articles/sir_model_description.html","id":"human-deer-proximity-rates","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions > 2.3.1. Aerosol Transmission","what":"2.3.1.2. Human-deer proximity rates","title":"sir_model_description","text":"Human - wild deer proximity rates – Human-deer interactions understudied literature, instead use expert elicitation estimate rate proximity humans deer wild conditions (\\(c_{HW}\\)). expert elicitation process estimated human-deer proximity rates two scenarios differed human density development, reflecting rural suburban conditions. Human – captive deer proximity rates – used expert elicitation estimate human-deer proximity rate intensive captive facilities, reflecting range activities including operational tasks, routine veterinary tasks, visitors interacting captive animals. used general description provide general, initial estimate unstudied proximity rate (\\(c_{HC}\\)), acknowledging rate likely enterprise- facility-specific.","code":""},{"path":"/articles/sir_model_description.html","id":"infection-probability-given-proximity","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions > 2.3.1. Aerosol Transmission","what":"2.3.1.3 Infection probability given proximity","title":"sir_model_description","text":"probability infection (\\(\\nu^{Aero}\\)) given proximity function instantaneous dose received dose response relationship. estimate dose received susceptible individual proximity infected individual, model 1) emission SARS-CoV-2 infected individual, 2) resulting concentration SARS-CoV-2 designated airspace around infected individual, considering virus emission virus loss, 3) amount SARS-CoV-2 inhaled susceptible individual given proximity infected individual. parameters exist literature focused human SARS-CoV-2 infection can adopted . First, infected individual emits SARS-CoV-2 particular rate (\\(ER_q\\); quanta/hr) product viral load sputum (\\(C_{\\nu}\\); RNA copies/ml), conversion factor (\\(C_i\\); quanta/RNA copy), inhalation/exhalation rate (\\(IR\\); \\(m^3\\)/hr), exhaled droplet volume concentration (\\(V_d\\); ml exhaled droplets/\\(m^3\\) exhaled; Mikszewski et al. 2021). \\[\\begin{align} {ER}_q = C_{\\nu} \\cdot C_i \\cdot {IR} \\cdot V_d \\end{align}\\] can model instantaneous concentration SARS-CoV-2 (\\(C\\); quanta/\\(m^3\\)) well-mixed airspace around infected individual emitting SARS-CoV-2 (\\({ER}_q\\); quanta/hr) fixed volume (\\(V\\); \\(m^3\\)), accounting loss rate (\\({IVRR}\\); \\(hr^{-1}\\)) sum air exchange (\\({AER}\\); \\(hr^{-1}\\)), settling (\\(s\\); \\(hr^{-1}\\), inactivation rates (\\(\\lambda\\); \\(hr^{-1}\\); modified Buonanno et al. 2020). \\[\\begin{align} C = \\frac{{ER}_q}{{IVRR} \\cdot V} \\end{align}\\] \\[\\begin{align} {IVRR} = {AER} + s + \\lambda \\end{align}\\] susceptible individual enters contaminated airspace surrounding infected individual, dose (\\(Q_A\\); quanta) product inhalation rate susceptible individual (\\(IR\\); \\(m^3\\)/hr), concentration SARS-CoV-2 fixed volume (\\(C\\); quanta/\\(m^3\\)), duration time susceptible individual stays within contaminated airspace contact (\\(t_{contact}\\); hr). \\[\\begin{align} Q = IR \\cdot C \\cdot t_{contact} \\end{align}\\] amount SARS-CoV-2 inhaled susceptible deer (\\(Q_A\\)) converted probability infection using Wells-Riley infection model (Equation 8). model, probability individual developing sustaining infection SARS-CoV-2 function dose received (measured quanta; \\(Q\\)) species-specific probability infection 1 quantum (\\(r\\); \\(r_{human} = 1\\) corresponds 1 quantum causing infection 63% susceptible individuals; HID63). use expert elicitation estimate dose response relationship white-tailed deer (\\(r_{deer}\\)). \\[\\begin{align} \\nu^{Aero} = 1 - e^{-rQ} \\end{align}\\] dose received probability infection calculated deer-deer human-deer proximity events based species-specific exhalation/inhalation rate, viral loads, dose response relationships, various durations proximity events particular contexts.","code":"calc_nu_aero <- function(AER,                          s,                          lambda,                          C_nu,                          C_i,                          IR,                          V_d,                          V_air,                          t_contact,                          r) {        # Calculate the viral particle loss rate as the sum     # of air exchange, settling rate, and inactivation    IVRR <- AER + s + lambda        # calculate emission rate of viral particles    ER_q <- C_nu * C_i * IR * V_d        # Calculate instantaneous concentration of viral particles.    C_inst <- ER_q / (IVRR * V_air) #V_air is airspace volume        # Calculate viral dose in quanta as product of     # inhalation rate, instantaneous concentration of viral particles    # and the duration of the contact    Q <- IR * C_inst * t_contact        # Use Wells-Riley model to transform amount of virus inhaled    # into a probability of infection via aerosol    nu_aero <- 1 - exp(-r * Q)        return(nu_aero) }"},{"path":"/articles/sir_model_description.html","id":"aerosol-transmission-rates-betaaero","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions > 2.3.1. Aerosol Transmission","what":"2.3.1.4 Aerosol transmission rates (\\(\\beta^{Aero}\\))","title":"sir_model_description","text":"various aerosol transmission rates used SIRS model. Parameter values listed Table 1. Aerosol transmission wild deer: \\[\\begin{align} \\beta_{WW}^{Aero} = \\sigma_{season} \\cdot c \\bigg(\\frac{N_W^{(1-q)}}{A_W} \\bigg) \\cdot \\nu^{Aero} \\end{align}\\] \\(\\sigma_{season}\\) = seasonal adjustment density-contact relationship (Section 2.3.1.1) \\(c\\) = scaling constant \\(q\\) = concavity scaling constant \\(N_W\\) = Total wild population size \\(A_W\\) = Area inhabited wild population \\(\\nu^{Aero}\\) = Probability infection aerosols (Section 2.3.1.3) Aerosol transmission captive deer: \\[\\begin{align} \\beta_{CC}^{Aero} = c_{CC} \\cdot \\nu^{Aero} \\end{align}\\] \\(c_{CC}\\) = Captivity proximity rate (Section 2.3.1.1) \\(\\nu^{Aero}\\) = Probability infection aerosols (Section 2.3.1.3) Aerosol transmission wild captive deer across fence: \\[\\begin{align} \\beta_{CW}^{Aero} = c_{WC} \\cdot \\nu^{Aero} \\end{align}\\] \\(c_{WC}\\) = Fence line proximity rate wild captive deer (Section 2.3.1.1) \\(\\nu^{Aero}\\) = Probability infection aerosols (Section 2.3.1.3) Aerosol transmission humans wild deer: \\[\\begin{align} \\beta_{HW}^{Aero} = c_{HW} \\cdot \\nu^{Aero} \\end{align}\\] \\(c_{HW}\\) = Proximity rate humans wild deer (Section 2.3.1.2) \\(\\nu^{Aero}\\) = Probability infection aerosols (Section 2.3.1.3) Aerosol transmission humans captive deer: \\[\\begin{align} \\beta_{HC}^{Aero} = c_{HC} \\cdot \\nu^{Aero} \\end{align}\\] \\(c_{HC}\\) = Proximity rate humans captive deer (Section 2.3.1.2) \\(\\nu^{Aero}\\) = Probability infection aerosols (Section 2.3.1.3)","code":""},{"path":"/articles/sir_model_description.html","id":"fluid-transmission","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions","what":"2.3.2 Fluid Transmission","title":"sir_model_description","text":"transmission rate SARS-CoV-2 via fluid transfer direct contact (\\(\\beta^{DC}\\)) product rate susceptible individual enters shared airspace infected individual (within 1.5m), probability two individuals making physical contact, probability infection given contact. simply take deer-deer proximity rates detailed (Section 2.3.1.1) multiply expert-elicited estimates physical contact probability (\\(\\sigma^{DC}\\)) determine rate physical contact. detail infection probability given physical contact (Section 2.3.2.1). build transmission rates (\\(\\beta^{Aero}\\)) deer (Section 2.3.2.2). consider transmission pathway deer, human deer. paragraph , towards end, transmission rates \\(\\beta^{Aero}\\), think \\(\\beta^{DC}\\).","code":""},{"path":"/articles/sir_model_description.html","id":"infection-probability-given-physical-contact","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions > 2.3.2 Fluid Transmission","what":"2.3.2.1 Infection probability given physical contact","title":"sir_model_description","text":"use Wells-Riley dose response model estimates infection probability log-logistic function dose (\\(d^{dc}\\); plaque-forming units, PFU) dose-response function (\\(k\\); Watanabe et al. 2010). dose received product typical volume sputum transferred given contact (\\(V^{DC}\\)) concentration SARS-CoV-2 sputum (\\(C_{\\nu}\\)). initially assume contact 100\\(\\mu\\)l sputum transferred individuals making contact. adjust volume across simulations identify volume threshold rapidly increases transmission risk. \\[\\begin{align} \\nu^{DC} = 1 - e^{-(d^{DC}/k)} \\end{align}\\] \\[\\begin{align} d^{DC} = V^{DC} \\cdot C_{\\nu} \\cdot pfuConv \\end{align}\\]","code":"# function for nu_direct_contact  calc_nu_DC<- function(V_DC, C_nu, pfu_conv, k){        # calculate dose received as function of volume of sputum and viral particles concentration    d_DC <- V_DC * C_nu * pfu_conv        # calculate infection probability     nu_DC <- 1 - exp(-d_DC/k)        return(nu_DC) }"},{"path":"/articles/sir_model_description.html","id":"fluid-transmission-betadc","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions > 2.3.2 Fluid Transmission","what":"2.3.2.2. Fluid Transmission (\\(\\beta^{DC}\\))","title":"sir_model_description","text":"various direct contact transmission rates used SIRS model. Parameter values listed Table 1. Direct contact transmission wild deer: \\[\\begin{align} \\beta_{WW}^{DC} = \\sigma_{season} \\cdot c \\cdot \\bigg( \\frac{N_W^{(1-q)}}{A_W} \\bigg) \\cdot \\sigma^{DC} \\cdot \\nu^{DC} \\end{align}\\] \\(\\sigma_{season}\\) = seasonal adjustment density-contact relationship (Section 2.3.1.1) \\(c\\) = scaling constant \\(q\\) = concavity scaling constant \\(N_W\\) = Total wild population size \\(A_W\\) = Area inhabited wild population \\(\\sigma^{DC}\\) = Probability deer making direct contact (Section 2.3.2.1) \\(\\nu^{DC}\\) = Probability infection direct contact (Section 2.3.2.2). Direct contact transmission captive deer: \\[\\begin{align} \\beta_{CC}^{DC} = c_{CC} \\cdot \\sigma^{DC} \\cdot \\nu^{DC} \\end{align}\\] \\(c_{CC}\\) = Captivity proximity rate (Section 2.3.1.1) \\(\\sigma^{DC}\\) = Probability physical contact (Section 2.3.2) \\(\\nu^{DC}\\) = Probability infection physical contact (Section 2.3.2.1) Direct contact transmission wild captive deer along fence line (assuming possible): \\[\\begin{align} \\beta_{CW}^{DC} = c_{WC} \\cdot \\sigma^{DC} \\cdot \\nu^{DC} \\end{align}\\] \\(c_{WC}\\) = Fenceline contact rate wild captive deer (Section 2.3.1.1) \\(\\sigma^{DC}\\) = Probability physical contact (Section 2.3.2) \\(\\nu^{DC}\\) = Probability infection physical contact (Section 2.3.2.1)","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2023). whitetailedSIRS: Package (One Line, Title Case). R package version 0.0.0.9000, https://github.com/javirudolph/whitetailedSIRS.","code":"@Manual{,   title = {whitetailedSIRS: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://github.com/javirudolph/whitetailedSIRS}, }"},{"path":"/index.html","id":"whitetailedsirs","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal whitetailedSIRS provide simple package generate epidemic projections white tailed deer populations using Susceptible-Infected-Recovered-Susceptible (SIRS) modeling framework. outputs package ggplot friendly, part, use list-column workflow working multiple simulations. Details model can found vignettes.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version whitetailedSIRS GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"javirudolph/whitetailedSIRS\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"basic example run simple projection using base function:","code":"library(whitetailedSIRS) ## basic example code example_inits <- c(S_wild = 1,                     I_wild = 0,                     R_wild = 0,                    S_captive = 1,                    I_captive = 0,                    R_captive = 0)  # length of time to run this for   example_times <-  seq(0, 500, by = 1)  # The parameters we are using in the simulation example_params <- c(alpha_immunity = 0.03,                     beta_aero_ww = 0.01,                     beta_aero_cw = 0.01,                     beta_aero_cc = 0.02,                     beta_aero_hw = 0.01,                     beta_aero_hc = 0.2,                     beta_dc_ww = 0.01,                     beta_dc_cw = 0.01,                     beta_dc_cc = 0.01,                     phi_cw = 0,                     phi_wc = 0,                     gamma_recov = 0.01,                     I_human = 0.05) library(deSolve) library(rootSolve)  example_out <- ode(y = example_inits, times = example_times, parms = example_params, func = whitetailedSIRS::simple_sirs)  example_eq <- runsteady(y = example_inits, parms = example_params, func = whitetailedSIRS::simple_sirs) library(tidyverse) example_out %>%     as_tibble() %>%     pivot_longer(-time, names_to = \"compartment\", values_to = \"proportion\") %>%     separate(compartment, sep = \"_\", c(\"sir_type\", \"pop_type\")) %>%     mutate(sir_type = factor(sir_type, levels = c(\"S\", \"I\", \"R\")),           pop_type = factor(pop_type, levels = c(\"wild\", \"captive\"))) %>%     ggplot(aes(x = time, y = proportion, color = sir_type, linetype = pop_type)) +    geom_line() +    labs(title = \"SIR dynamics\", y = \"Proportion of population\", x = \"Time in days\",         color = \"SIR\", linetype = \"Population type\") +    theme_bw() example_eq$y %>%     as_tibble_row() %>%     pivot_longer(cols = everything(), names_to = \"compartment\", values_to = \"proportion\") %>%     separate(compartment, sep = \"_\", c(\"sir_type\", \"pop_type\")) %>%     mutate(sir_type = factor(sir_type, levels = c(\"S\", \"I\", \"R\")),           pop_type = factor(pop_type, levels = c(\"wild\", \"captive\"))) %>%     ggplot(aes(x = sir_type,                alpha = pop_type,               y = proportion, fill = sir_type)) +    geom_col(position = \"dodge\") +    labs(title = \"Equilibrium proportions\", x = \"Compartment\", alpha = \"Population type\", fill = \"SIR\") +    scale_alpha_discrete(range = c(1, 0.4)) +    ylim(0, 1) +    theme_bw()"},{"path":"/reference/calc_contact_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Contact rate calculation for wild deer — calc_contact_rate","title":"Contact rate calculation for wild deer — calc_contact_rate","text":"Contact rate calculation wild deer","code":""},{"path":"/reference/calc_contact_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contact rate calculation for wild deer — calc_contact_rate","text":"","code":"calc_contact_rate(   sigma_season = NULL,   scaling_c = NULL,   N_w = NULL,   q = NULL,   A_w = NULL,   nsamples = NULL,   type_contact = \"c_ww\" )"},{"path":"/reference/calc_contact_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contact rate calculation for wild deer — calc_contact_rate","text":"sigma_season value season scaling (derived Williams et al 2014; Appendix ) scaling_c value contact scaling constant (influences slope density-contact relationship; reported Habib et al. 2011; Appendix ) N_w total population size deer q value concavity scaling constant (0-1, 0 equating density dependence 1 equating frequency dependence; reported Habib et al. 2011, Appendix ) A_w area inhabited N nsamples number values returned. Default 1, return vector > 2 type_contact set \"c_ww\" calculation done","code":""},{"path":"/reference/calc_contact_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contact rate calculation for wild deer — calc_contact_rate","text":"returns number numeric vector nsamples > 1","code":""},{"path":"/reference/calc_contact_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contact rate calculation for wild deer — calc_contact_rate","text":"","code":"calc_contact_rate() #> [1] 4.280206 calc_contact_rate(1, 16.37, 1000, 0.53, 100) #> [1] 4.207738 calc_contact_rate(c(1,1), c(16.37, 16.37), rpois(2, 1000), c(0.53, 0.53), c(100, 100)) #> [1] 4.324565 4.171969"},{"path":"/reference/calc_nu_aero.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate probability of infection via aerosol \\(\\nu^{AERO}\\) — calc_nu_aero","title":"Calculate probability of infection via aerosol \\(\\nu^{AERO}\\) — calc_nu_aero","text":"calc_nu_aero calculate one value probability infection using defaults arguments provided. Defaults described sir_model_description document sourced literature expert elicitation.","code":""},{"path":"/reference/calc_nu_aero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate probability of infection via aerosol \\(\\nu^{AERO}\\) — calc_nu_aero","text":"","code":"calc_nu_aero(   AER = NULL,   s = NULL,   lambda = NULL,   C_nu = NULL,   C_i = NULL,   IR = NULL,   ER = NULL,   V_d = NULL,   V_air = NULL,   t_contact = NULL,   r = NULL,   nsamples = NULL,   print_pars = FALSE,   seed = NULL )"},{"path":"/reference/calc_nu_aero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate probability of infection via aerosol \\(\\nu^{AERO}\\) — calc_nu_aero","text":"AER air exchange \\(hr^{-1}\\) s settling rate; \\(hr^{-1}\\) lambda innactivation rates \\(hr^{-1}\\) C_nu viral load sputum; RNA copies/ml C_i conversion factor quanta/RNA copy IR inhalation rate; \\(m^3/hr\\) ER exhalation rate; \\(m^3/hr\\) V_d exhaled droplet volume concentration; ml exhaled droplets/ \\(m^3\\) V_air fixed volume; \\(m^3\\) t_contact time contact contaminated airspace (hr) r species-specific probability infection 1 quantum. Default r_deer expert elicited values nsamples default 1, specified > 1 draw nsamples default distributions parameters print_pars logical. TRUE, return list parameters used make calculations seed setting seed, specify number","code":""},{"path":"/reference/calc_nu_aero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate probability of infection via aerosol \\(\\nu^{AERO}\\) — calc_nu_aero","text":"returns numeric vector length equal nsamples length vectors provided arguments","code":""},{"path":"/reference/calc_nu_aero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate probability of infection via aerosol \\(\\nu^{AERO}\\) — calc_nu_aero","text":"","code":"calc_nu_aero() # will return a single value using defaults #> [1] 0.3247267"},{"path":"/reference/calc_nu_dc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate transmission for direct contact — calc_nu_dc","title":"Calculate transmission for direct contact — calc_nu_dc","text":"Calculate transmission direct contact","code":""},{"path":"/reference/calc_nu_dc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate transmission for direct contact — calc_nu_dc","text":"","code":"calc_nu_dc(   V_DC = NULL,   C_nu = NULL,   pfu_conv = NULL,   k = NULL,   nsamples = NULL,   seed = NULL )"},{"path":"/reference/calc_nu_dc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate transmission for direct contact — calc_nu_dc","text":"seed","code":""},{"path":"/reference/simple_sirs.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple function to generate SIRS model projections — simple_sirs","title":"Simple function to generate SIRS model projections — simple_sirs","text":"Simple function generate SIRS model projections","code":""},{"path":"/reference/simple_sirs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple function to generate SIRS model projections — simple_sirs","text":"","code":"simple_sirs(time, state, parameters)"},{"path":"/reference/simple_sirs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple function to generate SIRS model projections — simple_sirs","text":"time vector values generate projection (length days) state initial state compartment populations parameters list parameters generate projection","code":""},{"path":"/reference/simple_sirs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple function to generate SIRS model projections — simple_sirs","text":"list values time step","code":""}]
