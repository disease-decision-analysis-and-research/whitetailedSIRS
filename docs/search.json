[{"path":"/articles/sir_model_description.html","id":"beta-definitions","dir":"Articles","previous_headings":"","what":"2.3. \\(\\beta\\) Definitions","title":"sir_model_description","text":"Several \\(\\beta\\) values included model incorporate various direct transmission pathways (superscripts outlined Section 2.2) wild deer, captive deer, humans (subscripts outlined Section 2.2). basic structure \\(\\beta\\) values product proximity contact rate infection probability given contact.","code":""},{"path":"/articles/sir_model_description.html","id":"aerosol-transmission","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions","what":"2.3.1. Aerosol Transmission","title":"sir_model_description","text":"Aerosolized transmission rates (\\(\\beta^{Aero}\\)) product rate susceptible individual enters shared airspace infected individual (within 1.5m) probability infection given proximity. detail deer-deer proximity rates wild, captivity, across fence lines separating settings (Section 2.3.1.1), human-deer proximity rates wild captive environments (Section 2.3.1.2), infection probability given proximity (Section 2.3.1.3). build transmission rates (\\(\\beta^{Aero}\\)) deer humans deer various settings (Section 2.3.1.4).","code":""},{"path":"/articles/sir_model_description.html","id":"deer-deer-proximity-rates","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions > 2.3.1. Aerosol Transmission","what":"2.3.1.1. Deer-deer proximity rates","title":"sir_model_description","text":"Wild deer - per capita rate proximity deer wild likely density dependent, though previous research concluded frequency-dependent (proportion population infected) transmission plays role well disease ecology (Smith et al. 2009). Habib et al. (2011) estimated intermediate density dependence across various densities white-tailed deer habitat availability eastern Alberta, Canada. use Habib et al.’s (2011) calculation daily proximity rate using varying deer densities seasonal variation white-tailed deer behavior (\\(\\sigma_{season}\\); estimated Williams et al. 2014; Table 1, Appendix 2). estimate intermediate density dependence using deer per 100 km2 match inferences original model developed Habib et al. (2011). \\[\\begin{align} \\text{proximity rate, wild} \\sim \\sigma_{season} \\cdot c \\bigg( \\frac{N^{1-q}}{} \\bigg) \\end{align}\\] : - \\(\\sigma_{season}\\) : season scaling (derived Williams et al 2014; Appendix ) - \\(c\\) : contact scaling constant (influences slope density-contact relationship; reported Habib et al. 2011; Appendix ) - \\(N\\) : total population size - \\(q\\) : concavity scaling constant (0-1, 0 equating density dependence 1 equating frequency dependence; reported Habib et al. 2011, Appendix ) - \\(\\) : area inhabited N Captive deer - per capita rate proximity deer captivity unstudied likely highly dependent facility type practices. lower density facilities mimic natural densities natural conditions estimate proximity rates based calculation wild populations (Eq. 11). use expert-elicited estimates deer proximity rates (proximity events per day) higher intensity captive operations (\\(c_{CC}\\)). Fence line interactions – estimate per capita proximity rates along fence lines separating wild captive deer herds using multiple estimates derived literature (\\(c_{WC}\\)).","code":""},{"path":"/articles/sir_model_description.html","id":"human-deer-proximity-rates","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions > 2.3.1. Aerosol Transmission","what":"2.3.1.2. Human-deer proximity rates","title":"sir_model_description","text":"Human - wild deer proximity rates – Human-deer interactions understudied literature, instead use expert elicitation estimate rate proximity humans deer wild conditions (\\(c_{HW}\\)). expert elicitation process estimated human-deer proximity rates two scenarios differed human density development, reflecting rural suburban conditions. Human – captive deer proximity rates – used expert elicitation estimate human-deer proximity rate intensive captive facilities, reflecting range activities including operational tasks, routine veterinary tasks, visitors interacting captive animals. used general description provide general, initial estimate unstudied proximity rate (\\(c_{HC}\\)), acknowledging rate likely enterprise- facility-specific.","code":""},{"path":"/articles/sir_model_description.html","id":"infection-probability-given-proximity","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions > 2.3.1. Aerosol Transmission","what":"2.3.1.3 Infection probability given proximity","title":"sir_model_description","text":"probability infection (\\(\\nu^{Aero}\\)) given proximity function instantaneous dose received dose response relationship. estimate dose received susceptible individual proximity infected individual, model 1) emission SARS-CoV-2 infected individual, 2) resulting concentration SARS-CoV-2 designated airspace around infected individual, considering virus emission virus loss, 3) amount SARS-CoV-2 inhaled susceptible individual given proximity infected individual. parameters exist literature focused human SARS-CoV-2 infection can adopted . First, infected individual emits SARS-CoV-2 particular rate (\\(ER_q\\); quanta/hr) product viral load sputum (\\(C_{\\nu}\\); RNA copies/ml), conversion factor (\\(C_i\\); quanta/RNA copy), inhalation/exhalation rate (\\(IR\\); \\(m^3\\)/hr), exhaled droplet volume concentration (\\(V_d\\); ml exhaled droplets/\\(m^3\\) exhaled; Mikszewski et al. 2021). \\[\\begin{align} {ER}_q = C_{\\nu} \\cdot C_i \\cdot {IR} \\cdot V_d \\end{align}\\] can model instantaneous concentration SARS-CoV-2 (\\(C\\); quanta/\\(m^3\\)) well-mixed airspace around infected individual emitting SARS-CoV-2 (\\({ER}_q\\); quanta/hr) fixed volume (\\(V\\); \\(m^3\\)), accounting loss rate (\\({IVRR}\\); \\(hr^{-1}\\)) sum air exchange (\\({AER}\\); \\(hr^{-1}\\)), settling (\\(s\\); \\(hr^{-1}\\), inactivation rates (\\(\\lambda\\); \\(hr^{-1}\\); modified Buonanno et al. 2020). \\[\\begin{align} C = \\frac{{ER}_q}{{IVRR} \\cdot V} \\end{align}\\] \\[\\begin{align} {IVRR} = {AER} + s + \\lambda \\end{align}\\] susceptible individual enters contaminated airspace surrounding infected individual, dose (\\(Q_A\\); quanta) product inhalation rate susceptible individual (\\(IR\\); \\(m^3\\)/hr), concentration SARS-CoV-2 fixed volume (\\(C\\); quanta/\\(m^3\\)), duration time susceptible individual stays within contaminated airspace contact (\\(t_{contact}\\); hr). \\[\\begin{align} Q = IR \\cdot C \\cdot t_{contact} \\end{align}\\] amount SARS-CoV-2 inhaled susceptible deer (\\(Q_A\\)) converted probability infection using Wells-Riley infection model (Equation 8). model, probability individual developing sustaining infection SARS-CoV-2 function dose received (measured quanta; \\(Q\\)) species-specific probability infection 1 quantum (\\(r\\); \\(r_{human} = 1\\) corresponds 1 quantum causing infection 63% susceptible individuals; HID63). use expert elicitation estimate dose response relationship white-tailed deer (\\(r_{deer}\\)). \\[\\begin{align} \\nu^{Aero} = 1 - e^{-rQ} \\end{align}\\] dose received probability infection calculated deer-deer human-deer proximity events based species-specific exhalation/inhalation rate, viral loads, dose response relationships, various durations proximity events particular contexts.","code":"calc_nu_aero <- function(AER,                          s,                          lambda,                          C_nu,                          C_i,                          IR,                          V_d,                          V_air,                          t_contact,                          r) {        # Calculate the viral particle loss rate as the sum     # of air exchange, settling rate, and inactivation    IVRR <- AER + s + lambda        # calculate emission rate of viral particles    ER_q <- C_nu * C_i * IR * V_d        # Calculate instantaneous concentration of viral particles.    C_inst <- ER_q / (IVRR * V_air) #V_air is airspace volume        # Calculate viral dose in quanta as product of     # inhalation rate, instantaneous concentration of viral particles    # and the duration of the contact    Q <- IR * C_inst * t_contact        # Use Wells-Riley model to transform amount of virus inhaled    # into a probability of infection via aerosol    nu_aero <- 1 - exp(-r * Q)        return(nu_aero) }"},{"path":"/articles/sir_model_description.html","id":"aerosol-transmission-rates-betaaero","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions > 2.3.1. Aerosol Transmission","what":"2.3.1.4 Aerosol transmission rates (\\(\\beta^{Aero}\\))","title":"sir_model_description","text":"various aerosol transmission rates used SIRS model. Parameter values listed Table 1. Aerosol transmission wild deer: \\[\\begin{align} \\beta_{WW}^{Aero} = \\sigma_{season} \\cdot c \\bigg(\\frac{N_W^{(1-q)}}{A_W} \\bigg) \\cdot \\nu^{Aero} \\end{align}\\] \\(\\sigma_{season}\\) = seasonal adjustment density-contact relationship (Section 2.3.1.1) \\(c\\) = scaling constant \\(q\\) = concavity scaling constant \\(N_W\\) = Total wild population size \\(A_W\\) = Area inhabited wild population \\(\\nu^{Aero}\\) = Probability infection aerosols (Section 2.3.1.3) Aerosol transmission captive deer: \\[\\begin{align} \\beta_{CC}^{Aero} = c_{CC} \\cdot \\nu^{Aero} \\end{align}\\] \\(c_{CC}\\) = Captivity proximity rate (Section 2.3.1.1) \\(\\nu^{Aero}\\) = Probability infection aerosols (Section 2.3.1.3) Aerosol transmission wild captive deer across fence: \\[\\begin{align} \\beta_{CW}^{Aero} = c_{WC} \\cdot \\nu^{Aero} \\end{align}\\] \\(c_{WC}\\) = Fence line proximity rate wild captive deer (Section 2.3.1.1) \\(\\nu^{Aero}\\) = Probability infection aerosols (Section 2.3.1.3) Aerosol transmission humans wild deer: \\[\\begin{align} \\beta_{HW}^{Aero} = c_{HW} \\cdot \\nu^{Aero} \\end{align}\\] \\(c_{HW}\\) = Proximity rate humans wild deer (Section 2.3.1.2) \\(\\nu^{Aero}\\) = Probability infection aerosols (Section 2.3.1.3) Aerosol transmission humans captive deer: \\[\\begin{align} \\beta_{HC}^{Aero} = c_{HC} \\cdot \\nu^{Aero} \\end{align}\\] \\(c_{HC}\\) = Proximity rate humans captive deer (Section 2.3.1.2) \\(\\nu^{Aero}\\) = Probability infection aerosols (Section 2.3.1.3)","code":""},{"path":"/articles/sir_model_description.html","id":"fluid-transmission","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions","what":"2.3.2 Fluid Transmission","title":"sir_model_description","text":"transmission rate SARS-CoV-2 via fluid transfer direct contact (\\(\\beta^{DC}\\)) product rate susceptible individual enters shared airspace infected individual (within 1.5m), probability two individuals making physical contact, probability infection given contact. simply take deer-deer proximity rates detailed (Section 2.3.1.1) multiply expert-elicited estimates physical contact probability (\\(\\sigma^{DC}\\)) determine rate physical contact. detail infection probability given physical contact (Section 2.3.2.1). build transmission rates (\\(\\beta^{Aero}\\)) deer (Section 2.3.2.2). consider transmission pathway deer, human deer. paragraph , towards end, transmission rates \\(\\beta^{Aero}\\), think \\(\\beta^{DC}\\).","code":""},{"path":"/articles/sir_model_description.html","id":"infection-probability-given-physical-contact","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions > 2.3.2 Fluid Transmission","what":"2.3.2.1 Infection probability given physical contact","title":"sir_model_description","text":"use Wells-Riley dose response model estimates infection probability log-logistic function dose (\\(d^{dc}\\); plaque-forming units, PFU) dose-response function (\\(k\\); Watanabe et al. 2010). dose received product typical volume sputum transferred given contact (\\(V^{DC}\\)) concentration SARS-CoV-2 sputum (\\(C_{\\nu}\\)). initially assume contact 100\\(\\mu\\)l sputum transferred individuals making contact. adjust volume across simulations identify volume threshold rapidly increases transmission risk. \\[\\begin{align} \\nu^{DC} = 1 - e^{-(d^{DC}/k)} \\end{align}\\] \\[\\begin{align} d^{DC} = V^{DC} \\cdot C_{\\nu} \\cdot pfuConv \\end{align}\\]","code":"# function for nu_direct_contact  calc_nu_DC<- function(V_DC, C_nu, pfu_conv, k){        # calculate dose received as function of volume of sputum and viral particles concentration    d_DC <- V_DC * C_nu * pfu_conv        # calculate infection probability     nu_DC <- 1 - exp(-d_DC/k)        return(nu_DC) }"},{"path":"/articles/sir_model_description.html","id":"fluid-transmission-betadc","dir":"Articles","previous_headings":"2.3. \\(\\beta\\) Definitions > 2.3.2 Fluid Transmission","what":"2.3.2.2. Fluid Transmission (\\(\\beta^{DC}\\))","title":"sir_model_description","text":"various direct contact transmission rates used SIRS model. Parameter values listed Table 1. Direct contact transmission wild deer: \\[\\begin{align} \\beta_{WW}^{DC} = \\sigma_{season} \\cdot c \\cdot \\bigg( \\frac{N_W^{(1-q)}}{A_W} \\bigg) \\cdot \\sigma^{DC} \\cdot \\nu^{DC} \\end{align}\\] \\(\\sigma_{season}\\) = seasonal adjustment density-contact relationship (Section 2.3.1.1) \\(c\\) = scaling constant \\(q\\) = concavity scaling constant \\(N_W\\) = Total wild population size \\(A_W\\) = Area inhabited wild population \\(\\sigma^{DC}\\) = Probability deer making direct contact (Section 2.3.2.1) \\(\\nu^{DC}\\) = Probability infection direct contact (Section 2.3.2.2). Direct contact transmission captive deer: \\[\\begin{align} \\beta_{CC}^{DC} = c_{CC} \\cdot \\sigma^{DC} \\cdot \\nu^{DC} \\end{align}\\] \\(c_{CC}\\) = Captivity proximity rate (Section 2.3.1.1) \\(\\sigma^{DC}\\) = Probability physical contact (Section 2.3.2) \\(\\nu^{DC}\\) = Probability infection physical contact (Section 2.3.2.1) Direct contact transmission wild captive deer along fence line (assuming possible): \\[\\begin{align} \\beta_{CW}^{DC} = c_{WC} \\cdot \\sigma^{DC} \\cdot \\nu^{DC} \\end{align}\\] \\(c_{WC}\\) = Fenceline contact rate wild captive deer (Section 2.3.1.1) \\(\\sigma^{DC}\\) = Probability physical contact (Section 2.3.2) \\(\\nu^{DC}\\) = Probability infection physical contact (Section 2.3.2.1)","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Javi Rudolph. Author, maintainer. Elias Rosenblatt. Author, contributor. Fer Arce. Author, contributor. Jonathan Cook. Contributor. Graziella DiRenzo. Contributor. Brittany Mosher. Contributor. Mike Runge. Contributor. Evan Grant. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rudolph J, Rosenblatt E, Arce F (2023). whitetailedSIRS: Disease dyanmics white tailed deers using SIRS framework. R package version 0.0.0.9000, https://github.com/disease-decision-analysis--research/whitetailedSIRS.","code":"@Manual{,   title = {whitetailedSIRS: Disease dyanmics in white tailed deers using an SIRS framework},   author = {Javi Rudolph and Elias Rosenblatt and Fer Arce},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://github.com/disease-decision-analysis-and-research/whitetailedSIRS}, }"},{"path":"/index.html","id":"whitetailedsirs","dir":"","previous_headings":"","what":"Disease dyanmics in white tailed deers using an SIRS framework","title":"Disease dyanmics in white tailed deers using an SIRS framework","text":"goal whitetailedSIRS provide simple package generate epidemic projections white tailed deer populations using Susceptible-Infected-Recovered-Susceptible (SIRS) modeling framework. outputs package ggplot friendly, part, use list-column workflow working multiple simulations. Details model can found vignettes.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Disease dyanmics in white tailed deers using an SIRS framework","text":"can install development version whitetailedSIRS GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"disease-decision-analysis-and-research/whitetailedSIRS\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Disease dyanmics in white tailed deers using an SIRS framework","text":"basic example run simple projection using base function:","code":"library(whitetailedSIRS) ## basic example code example_inits <- c(S_wild = 1,                     I_wild = 0,                     R_wild = 0,                    S_captive = 1,                    I_captive = 0,                    R_captive = 0)  # length of time to run this for   example_times <-  seq(0, 500, by = 1)  # The parameters we are using in the simulation example_params <- c(alpha_immunity = 0.03,                     beta_aero_ww = 0.01,                     beta_aero_cw = 0.01,                     beta_aero_cc = 0.02,                     beta_aero_hw = 0.01,                     beta_aero_hc = 0.2,                     beta_dc_ww = 0.01,                     beta_dc_cw = 0.01,                     beta_dc_cc = 0.01,                     phi_cw = 0,                     phi_wc = 0,                     gamma_recov = 0.01,                     I_human = 0.05) library(deSolve) library(rootSolve)  example_out <- ode(y = example_inits, times = example_times, parms = example_params, func = whitetailedSIRS::simple_sirs)  example_eq <- runsteady(y = example_inits, parms = example_params, func = whitetailedSIRS::simple_sirs) library(tidyverse) example_out %>%     as_tibble() %>%     pivot_longer(-time, names_to = \"compartment\", values_to = \"proportion\") %>%     separate(compartment, sep = \"_\", c(\"sir_type\", \"pop_type\")) %>%     mutate(sir_type = factor(sir_type, levels = c(\"S\", \"I\", \"R\")),           pop_type = factor(pop_type, levels = c(\"wild\", \"captive\"))) %>%     ggplot(aes(x = time, y = proportion, color = sir_type, linetype = pop_type)) +    geom_line() +    labs(title = \"SIR dynamics\", y = \"Proportion of population\", x = \"Time in days\",         color = \"SIR\", linetype = \"Population type\") +    theme_bw() example_eq$y %>%     as_tibble_row() %>%     pivot_longer(cols = everything(), names_to = \"compartment\", values_to = \"proportion\") %>%     separate(compartment, sep = \"_\", c(\"sir_type\", \"pop_type\")) %>%     mutate(sir_type = factor(sir_type, levels = c(\"S\", \"I\", \"R\")),           pop_type = factor(pop_type, levels = c(\"wild\", \"captive\"))) %>%     ggplot(aes(x = sir_type,                alpha = pop_type,               y = proportion, fill = sir_type)) +    geom_col(position = \"dodge\") +    labs(title = \"Equilibrium proportions\", x = \"Compartment\", alpha = \"Population type\", fill = \"SIR\") +    scale_alpha_discrete(range = c(1, 0.4)) +    ylim(0, 1) +    theme_bw()"},{"path":"/reference/calc_contact_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Contact rate calculation for wild deer — calc_contact_rate","title":"Contact rate calculation for wild deer — calc_contact_rate","text":"Contact rate calculation wild deer","code":""},{"path":"/reference/calc_contact_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contact rate calculation for wild deer — calc_contact_rate","text":"","code":"calc_contact_rate(   sigma_season = NULL,   scaling_c = NULL,   N_w = NULL,   q = NULL,   A_w = NULL,   nsamples = NULL,   seed = NULL,   type_contact = NULL )"},{"path":"/reference/calc_contact_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contact rate calculation for wild deer — calc_contact_rate","text":"sigma_season value season scaling (derived Williams et al 2014; Appendix ). Default set 1 scaling_c value contact scaling constant (influences slope density-contact relationship; reported Habib et al. 2011; Appendix ) N_w total population size deer. Poisson dist w/ean = 10 q value concavity scaling constant (0-1, 0 equating density dependence 1 equating frequency dependence; reported Habib et al. 2011, Appendix ) A_w area inhabited N nsamples number values returned. Default 1, return vector > 2 seed specified, sets seed function type_contact option \"low\", \"medium\", \"high\" based parameters Habib 2011 table. set NULL, manual input scaling_c q needed.","code":""},{"path":"/reference/calc_contact_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contact rate calculation for wild deer — calc_contact_rate","text":"returns number numeric vector nsamples > 1","code":""},{"path":"/reference/calc_contact_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contact rate calculation for wild deer — calc_contact_rate","text":"","code":"calc_contact_rate() #> Error in if (type_contact == \"low\") {    scaling_c = rep(16.37, nsamples)    q = rep(0.53, nsamples)}: argument is of length zero calc_contact_rate(1, 16.37, 1000, 0.53, 100) #> Error in if (type_contact == \"low\") {    scaling_c = rep(16.37, nsamples)    q = rep(0.53, nsamples)}: argument is of length zero calc_contact_rate(c(1,1), c(16.37, 16.37), rpois(2, 1000), c(0.53, 0.53), c(100, 100)) #> Error in if (type_contact == \"low\") {    scaling_c = rep(16.37, nsamples)    q = rep(0.53, nsamples)}: argument is of length zero"},{"path":"/reference/calc_nu_aero.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate probability of infection via aerosol \\(\\nu^{AERO}\\) — calc_nu_aero","title":"Calculate probability of infection via aerosol \\(\\nu^{AERO}\\) — calc_nu_aero","text":"calc_nu_aero calculate one value probability infection using defaults arguments provided. Defaults described sir_model_description document sourced literature expert elicitation.","code":""},{"path":"/reference/calc_nu_aero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate probability of infection via aerosol \\(\\nu^{AERO}\\) — calc_nu_aero","text":"","code":"calc_nu_aero(   AER = NULL,   s = NULL,   lambda = NULL,   C_nu = NULL,   C_i = NULL,   IR = NULL,   ER = NULL,   V_d = NULL,   V_air = NULL,   t_contact = NULL,   r = NULL,   nsamples = NULL,   print_pars = FALSE,   seed = NULL )"},{"path":"/reference/calc_nu_aero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate probability of infection via aerosol \\(\\nu^{AERO}\\) — calc_nu_aero","text":"AER air exchange \\(hr^{-1}\\). Default set 4. s settling rate; \\(hr^{-1}\\) Default set 0.24 lambda innactivation rates \\(hr^{-1}\\). Default set 0.63 C_nu viral load sputum; RNA copies/ml. Default samples expert elicited distribution parameter 'Viral Load' C_i conversion factor quanta/RNA copy. Default set 0.0014 IR inhalation rate; \\(m^3/hr\\).Default set 0.846 ER exhalation rate; \\(m^3/hr\\). Default IR = ER V_d exhaled droplet volume concentration; ml exhaled droplets/ \\(m^3\\). Default 0.009 V_air fixed volume; \\(m^3\\). Default 7.07 t_contact time contact contaminated airspace (hr). r species-specific probability infection 1 quantum. Default r_deer expert elicited values nsamples default 1, specified > 1 draw nsamples default distributions parameters print_pars logical. TRUE, return list parameters used make calculations seed setting seed, specify number","code":""},{"path":"/reference/calc_nu_aero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate probability of infection via aerosol \\(\\nu^{AERO}\\) — calc_nu_aero","text":"numeric vector length equal nsamples length vectors provided arguments","code":""},{"path":"/reference/calc_nu_aero.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate probability of infection via aerosol \\(\\nu^{AERO}\\) — calc_nu_aero","text":"Mathematical background calculation. infected individual emits viral particles particular rate \\(ER_q\\) quanta/hr product arguments described : $$ER_q = C_{\\nu} \\cdot C_i   \\cdot ER \\cdot V_d$$ used model instantaneous concentration viral particles (C) well-mixed air space (quanta/\\(m^3\\)) around infected individual follows: $$C = \\frac{ER_q}{IVRR \\cdot V_{air}}$$ loss rate (IVRR) given : $$AER + s + \\lambda$$ susceptible individual enters contaminated airspace surrounding infected individual, dose (\\(Q_A\\)) product inhalation rate, concentration viral particles, time contact: $$Q_A = IR   \\cdot C \\cdot t_{contact}$$ dose \\(Q_A\\) converted probability infection using Wells-Riley infection model function dose received species-specific probability infection 1 quantum. $$\\nu^{AERO} = 1 - e^{-rQ}$$","code":""},{"path":"/reference/calc_nu_aero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate probability of infection via aerosol \\(\\nu^{AERO}\\) — calc_nu_aero","text":"","code":"calc_nu_aero() # will return a single value using defaults #> [1] 0.5359741"},{"path":"/reference/calc_nu_dc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate transmission for direct contact — calc_nu_dc","title":"Calculate transmission for direct contact — calc_nu_dc","text":"Calculate transmission direct contact","code":""},{"path":"/reference/calc_nu_dc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate transmission for direct contact — calc_nu_dc","text":"","code":"calc_nu_dc(   V_DC = NULL,   C_nu = NULL,   pfu_conv = NULL,   k = NULL,   nsamples = NULL,   seed = NULL )"},{"path":"/reference/calc_nu_dc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate transmission for direct contact — calc_nu_dc","text":"V_DC Transferred volume (ml) C_nu Concentration infectious particles sputum (gc per ml) pfu_conv (PFU per GC) k set 410 nsamples number samples wanted. Default set 1 seed sets seed random draws parameter default distributions.","code":""},{"path":"/reference/calc_nu_dc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate transmission for direct contact — calc_nu_dc","text":"returns number vector probability values probability infection via direct contact.","code":""},{"path":"/reference/calc_nu_dc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate transmission for direct contact — calc_nu_dc","text":"","code":"calc_nu_dc() # will run the defaults #> [1] 0.0008325333"},{"path":"/reference/contact_rate_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Contact rate parameters — contact_rate_params","title":"Contact rate parameters — contact_rate_params","text":"Modeling relationship density contact rates wild deer populations. Habib et al. (2011) used radio-collared deer eastern Alberta , part, estimate contact rates deer group deer different groups. results unique calculate per capita contact rate terms deer contacted/individual/time. differs many approaches, just look raw probability two collared individuals place time. Habib et al. (2011) estimated home ranges, contact rates, resource selection functions across variable densities habitat conditions (areas 12%, 26%, 53%, 67% wooded habitat). simulated individual white-tailed deer movements based observed data estimate total number individuals contact, sum contact rates within group different groups. estimated likely parameters per-capita contact rate.","code":""},{"path":"/reference/contact_rate_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contact rate parameters — contact_rate_params","text":"","code":"contact_rate_params"},{"path":"/reference/contact_rate_params.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Contact rate parameters — contact_rate_params","text":"contact_rate_params","code":""},{"path":"/reference/contact_rate_params.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Contact rate parameters — contact_rate_params","text":"https://doi.org/10.1016/j.ecolmodel.2011.05.007","code":""},{"path":"/reference/draw_elicitation_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Random draw of parameters from expert elicitation — draw_elicitation_samples","title":"Random draw of parameters from expert elicitation — draw_elicitation_samples","text":"Random draw parameters expert elicitation","code":""},{"path":"/reference/draw_elicitation_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random draw of parameters from expert elicitation — draw_elicitation_samples","text":"","code":"draw_elicitation_samples(   elicitation_data = NULL,   nsamples = NULL,   seed = NULL,   return_df = FALSE )"},{"path":"/reference/draw_elicitation_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random draw of parameters from expert elicitation — draw_elicitation_samples","text":"elicitation_data defaults package data expert elicitation nsamples number samples draw seed specified, seed set return_df TRUE object returned data frame","code":""},{"path":"/reference/draw_elicitation_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random draw of parameters from expert elicitation — draw_elicitation_samples","text":"returns tibble list column samples drawn unless otherwise specified return_df argument.","code":""},{"path":"/reference/elicitation_data.html","id":null,"dir":"Reference","previous_headings":"","what":"elicitation_data — elicitation_data","title":"elicitation_data — elicitation_data","text":"Group averaged (using quantile averaging) parameter estimates parameters derived using expert elicitation. Parameters include 1) Days recovered individual can reinfected SARS-CoV-2 (Parameter = Temporary Immunity; units = days), 2) Number individuals infected via wastewater every 100 individuals infected via direct transmission (Parameter = Wastewater Infections; units = individuals), 3) Number individuals infected via formites every 100 individuals infected via direct transmission (Parameter = Fomite Infections; units = individuals), 4) Ratio deer sputum viral load : humansputum viral load (Parameter = Viral Load; units = multiplicative ratio), 5) Dose-response value quantum dosage using Wells-Riley dose response model (Parameter = Dose-Response; units = r value). 6) deer-deer contact duration (minutes), 7) deer-deer direct contact probability, 8) deer-deer proximity rate baiting (per day; 17 events per day without baiting), 9) deer-human proximity rate, rural (per 120 days), 10) deer-human proximity duration, rural (minutes), 11) deer-human proximity rate, suburban (per 120 days), 12) deer-human proximity duration, suburban (minutes), 13) deer-human proximity rate, captive (per 120 days), 14) deer-human proximity duration, captive (minutes), 15) deer-deer proximity rate captivity (per day).","code":""},{"path":"/reference/elicitation_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"elicitation_data — elicitation_data","text":"","code":"elicitation_data"},{"path":[]},{"path":"/reference/elicitation_data.html","id":"elicitation-data","dir":"Reference","previous_headings":"","what":"elicitation_data","title":"elicitation_data — elicitation_data","text":"data frame 4 columns 15 rows, row corresponding elicited parameter: parameter Parameter elicited mu mean value sd standard deviation family distribution family parameters given","code":""},{"path":"/reference/elicitation_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"elicitation_data — elicitation_data","text":"Contact: Elias Rosenblatt erosenbl@uvm.edu","code":""},{"path":"/reference/run_sirs_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"In progress Run SIRS projection — run_sirs_projection","title":"In progress Run SIRS projection — run_sirs_projection","text":"function still development wrapper functions package generate projection SIRS model using defaults specified number samples","code":""},{"path":"/reference/run_sirs_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"In progress Run SIRS projection — run_sirs_projection","text":"","code":"run_sirs_projection(   nsamples = 100,   seed = 123,   wild_scenario = \"rural\",   ndays = 120,   type_contact = \"low\",   ... )"},{"path":"/reference/run_sirs_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"In progress Run SIRS projection — run_sirs_projection","text":"nsamples number samples return seed specified set seed wild_scenario deafult 'rural' can also calculate 'suburban' ndays number days projection specified 120 ...","code":""},{"path":"/reference/run_sirs_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"In progress Run SIRS projection — run_sirs_projection","text":"returns list column tibble parameters sirs projection.","code":""},{"path":"/reference/simple_sirs.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple function to generate SIRS model projections — simple_sirs","title":"Simple function to generate SIRS model projections — simple_sirs","text":"simple_sirs written work alongside deSolve::ode() function, return object proportion individuals found SIR compartments specified time points.","code":""},{"path":"/reference/simple_sirs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple function to generate SIRS model projections — simple_sirs","text":"","code":"simple_sirs(time, state, parameters)"},{"path":"/reference/simple_sirs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple function to generate SIRS model projections — simple_sirs","text":"time vector values generate projection (length days). state initial state compartment populations. named vector starting values S_wild, I_wild, R_wild, S_captive, I_captive, R_captive. parameters list parameters generate projection. parameters include transmission parameters, immunity recovery rates, proportion infected humans.","code":""},{"path":"/reference/simple_sirs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple function to generate SIRS model projections — simple_sirs","text":"used deSolve::ode() function, return dataframe proportion individuals SIR compartments time point.","code":""},{"path":"/reference/simple_sirs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple function to generate SIRS model projections — simple_sirs","text":"","code":"# prepare the input parameters: example_inits <- c(S_wild = 1, I_wild = 0,                    R_wild = 0, S_captive = 1,                    I_captive = 0, R_captive = 0)  # set the time to run example_times <-  seq(0, 500, by = 1) # Set parameters of transmission, immunity, recovery  example_params <- c(alpha_immunity = 0.03,                     beta_aero_ww = 0.01,                     beta_aero_cw = 0.01,                     beta_aero_cc = 0.02,                     beta_aero_hw = 0.01,                     beta_aero_hc = 0.2,                     beta_dc_ww = 0.01,                     beta_dc_cw = 0.01,                     beta_dc_cc = 0.01,                     phi_cw = 0,                     phi_wc = 0,                     gamma_recov = 0.01,                     I_human = 0.05)  # run the ode function:  deSolve::ode(y = example_inits, times = example_times, parms = example_params, func = whitetailedSIRS::simple_sirs) #>     time    S_wild       I_wild       R_wild S_captive  I_captive    R_captive #> 1      0 1.0000000 0.0000000000 0.000000e+00 1.0000000 0.00000000 0.000000e+00 #> 2      1 0.9993937 0.0006033453 2.972120e-06 0.9898960 0.01005447 4.952954e-05 #> 3      2 0.9985719 0.0014152679 1.282810e-05 0.9795861 0.02021672 1.971848e-04 #> 4      3 0.9975291 0.0024394532 3.143763e-05 0.9690747 0.03048420 4.411150e-04 #> 5      4 0.9962606 0.0036789666 6.042078e-05 0.9583659 0.04085440 7.797231e-04 #> 6      5 0.9947604 0.0051376972 1.019176e-04 0.9474655 0.05132361 1.210903e-03 #> 7      6 0.9930238 0.0068185479 1.576558e-04 0.9363788 0.06188829 1.732952e-03 #> 8      7 0.9910463 0.0087243155 2.294167e-04 0.9251115 0.07254442 2.344106e-03 #> 9      8 0.9888235 0.0108575342 3.189569e-04 0.9136698 0.08328762 3.042611e-03 #> 10     9 0.9863516 0.0132203970 4.280010e-04 0.9020602 0.09411306 3.826719e-03 #> 11    10 0.9836270 0.0158147917 5.582446e-04 0.8902898 0.10501553 4.694687e-03 #> 12    11 0.9806464 0.0186422575 7.113503e-04 0.8783658 0.11598946 5.644766e-03 #> 13    12 0.9774071 0.0217039608 8.889445e-04 0.8662959 0.12702886 6.675204e-03 #> 14    13 0.9739067 0.0250006762 1.092615e-03 0.8540884 0.13812738 7.784242e-03 #> 15    14 0.9701433 0.0285327644 1.323910e-03 0.8417516 0.14927827 8.970104e-03 #> 16    15 0.9661155 0.0323001547 1.584329e-03 0.8292946 0.16047443 1.023100e-02 #> 17    16 0.9618223 0.0363023277 1.875330e-03 0.8167265 0.17170841 1.156513e-02 #> 18    17 0.9572634 0.0405382982 2.198316e-03 0.8040569 0.18297243 1.297065e-02 #> 19    18 0.9524388 0.0450066010 2.554638e-03 0.7912959 0.19425837 1.444571e-02 #> 20    19 0.9473491 0.0497052787 2.945591e-03 0.7784537 0.20555783 1.598844e-02 #> 21    20 0.9419957 0.0546318712 3.372409e-03 0.7655410 0.21686212 1.759692e-02 #> 22    21 0.9363803 0.0597834082 3.836263e-03 0.7525685 0.22816231 1.926922e-02 #> 23    22 0.9305053 0.0651564035 4.338258e-03 0.7395474 0.23944927 2.100335e-02 #> 24    23 0.9243737 0.0707468522 4.879429e-03 0.7264890 0.25071363 2.279733e-02 #> 25    24 0.9179890 0.0765502310 5.460738e-03 0.7134050 0.26194590 2.464910e-02 #> 26    25 0.9113554 0.0825615008 6.083072e-03 0.7003070 0.27313645 2.655660e-02 #> 27    26 0.9044776 0.0887751127 6.747240e-03 0.6872067 0.28427555 2.851773e-02 #> 28    27 0.8973610 0.0951850166 7.453969e-03 0.6741162 0.29535344 3.053033e-02 #> 29    28 0.8900114 0.1017846729 8.203903e-03 0.6610474 0.30636033 3.259225e-02 #> 30    29 0.8824353 0.1085670677 8.997600e-03 0.6480123 0.31728644 3.470126e-02 #> 31    30 0.8746397 0.1155247296 9.835530e-03 0.6350228 0.32812207 3.685515e-02 #> 32    31 0.8666322 0.1226497512 1.071807e-02 0.6220908 0.33885761 3.905164e-02 #> 33    32 0.8584207 0.1299338118 1.164552e-02 0.6092280 0.34948358 4.128843e-02 #> 34    33 0.8500137 0.1373682032 1.261807e-02 0.5964461 0.35999071 4.356323e-02 #> 35    34 0.8414203 0.1449438585 1.363582e-02 0.5837564 0.37036992 4.587367e-02 #> 36    35 0.8326498 0.1526513823 1.469878e-02 0.5711702 0.38061237 4.821741e-02 #> 37    36 0.8237120 0.1604810834 1.580688e-02 0.5586984 0.39070954 5.059208e-02 #> 38    37 0.8146171 0.1684230094 1.695992e-02 0.5463515 0.40065322 5.299528e-02 #> 39    38 0.8053754 0.1764669821 1.815764e-02 0.5341398 0.41043553 5.542463e-02 #> 40    39 0.7959977 0.1846026354 1.939966e-02 0.5220733 0.42004899 5.787772e-02 #> 41    40 0.7864950 0.1928194528 2.068554e-02 0.5101613 0.42948655 6.035215e-02 #> 42    41 0.7768785 0.2011068067 2.201472e-02 0.4984129 0.43874156 6.284552e-02 #> 43    42 0.7671594 0.2094539972 2.338657e-02 0.4868367 0.44780783 6.535545e-02 #> 44    43 0.7573494 0.2178502916 2.480035e-02 0.4754408 0.45667967 6.787956e-02 #> 45    44 0.7474598 0.2262849633 2.625527e-02 0.4642327 0.46535184 7.041549e-02 #> 46    45 0.7375022 0.2347473302 2.775042e-02 0.4532195 0.47381964 7.296089e-02 #> 47    46 0.7274884 0.2432267924 2.928485e-02 0.4424077 0.48207886 7.551346e-02 #> 48    47 0.7174296 0.2517128691 3.085751e-02 0.4318033 0.49012582 7.807090e-02 #> 49    48 0.7073375 0.2601952334 3.246728e-02 0.4214117 0.49795734 8.063098e-02 #> 50    49 0.6972233 0.2686637464 3.411297e-02 0.4112378 0.50557078 8.319146e-02 #> 51    50 0.6870982 0.2771084887 3.579335e-02 0.4012858 0.51296403 8.575019e-02 #> 52    51 0.6769731 0.2855197912 3.750709e-02 0.3915595 0.52013547 8.830503e-02 #> 53    52 0.6668589 0.2938882623 3.925285e-02 0.3820621 0.52708398 9.085391e-02 #> 54    53 0.6567660 0.3022048140 4.102921e-02 0.3727962 0.53380898 9.339481e-02 #> 55    54 0.6467046 0.3104606848 4.283470e-02 0.3637639 0.54031032 9.592576e-02 #> 56    55 0.6366847 0.3186474614 4.466783e-02 0.3549668 0.54658834 9.844485e-02 #> 57    56 0.6267158 0.3267570966 4.652706e-02 0.3464059 0.55264384 1.009502e-01 #> 58    57 0.6168073 0.3347819252 4.841082e-02 0.3380818 0.55847803 1.034401e-01 #> 59    58 0.6069678 0.3427146779 5.031752e-02 0.3299946 0.56409255 1.059128e-01 #> 60    59 0.5972060 0.3505484922 5.224552e-02 0.3221439 0.56948942 1.083667e-01 #> 61    60 0.5875299 0.3582769207 5.419321e-02 0.3145289 0.57467103 1.108001e-01 #> 62    61 0.5779471 0.3658939373 5.615892e-02 0.3071483 0.57964012 1.132116e-01 #> 63    62 0.5684651 0.3733939416 5.814100e-02 0.3000005 0.58439974 1.155997e-01 #> 64    63 0.5590905 0.3807717599 6.013778e-02 0.2930836 0.58895325 1.179632e-01 #> 65    64 0.5498297 0.3880226453 6.214761e-02 0.2863951 0.59330427 1.203006e-01 #> 66    65 0.5406889 0.3951422751 6.416883e-02 0.2799325 0.59745667 1.226108e-01 #> 67    66 0.5316735 0.4021267465 6.619978e-02 0.2736927 0.60141456 1.248927e-01 #> 68    67 0.5227886 0.4089725708 6.823883e-02 0.2676726 0.60518223 1.271452e-01 #> 69    68 0.5140390 0.4156766659 7.028436e-02 0.2618685 0.60876416 1.293673e-01 #> 70    69 0.5054289 0.4222363471 7.233477e-02 0.2562769 0.61216496 1.315582e-01 #> 71    70 0.4969622 0.4286493172 7.438848e-02 0.2508937 0.61538940 1.337169e-01 #> 72    71 0.4886424 0.4349136551 7.644394e-02 0.2457150 0.61844234 1.358427e-01 #> 73    72 0.4804726 0.4410278030 7.849962e-02 0.2407363 0.62132874 1.379349e-01 #> 74    73 0.4724554 0.4469905538 8.055403e-02 0.2359534 0.62405362 1.399930e-01 #> 75    74 0.4645933 0.4528010368 8.260571e-02 0.2313617 0.62662205 1.420163e-01 #> 76    75 0.4568881 0.4584587030 8.465324e-02 0.2269566 0.62903913 1.440043e-01 #> 77    76 0.4493415 0.4639633108 8.669523e-02 0.2227334 0.63130998 1.459567e-01 #> 78    77 0.4419547 0.4693149099 8.873035e-02 0.2186873 0.63343973 1.478730e-01 #> 79    78 0.4347289 0.4745138262 9.075728e-02 0.2148135 0.63543347 1.497530e-01 #> 80    79 0.4276646 0.4795606459 9.277477e-02 0.2111073 0.63729628 1.515964e-01 #> 81    80 0.4207622 0.4844562000 9.478161e-02 0.2075637 0.63903319 1.534031e-01 #> 82    81 0.4140218 0.4892015482 9.677662e-02 0.2041780 0.64064917 1.551728e-01 #> 83    82 0.4074434 0.4937979639 9.875868e-02 0.2009452 0.64214914 1.569057e-01 #> 84    83 0.4010264 0.4982469185 1.007267e-01 0.1978606 0.64353795 1.586015e-01 #> 85    84 0.3947703 0.5025500663 1.026797e-01 0.1949193 0.64482035 1.602604e-01 #> 86    85 0.3886742 0.5067092301 1.046166e-01 0.1921167 0.64600102 1.618823e-01 #> 87    86 0.3827371 0.5107263866 1.065366e-01 0.1894480 0.64708452 1.634675e-01 #> 88    87 0.3769577 0.5146036523 1.084387e-01 0.1869087 0.64807534 1.650160e-01 #> 89    88 0.3713347 0.5183432703 1.103220e-01 0.1844941 0.64897783 1.665281e-01 #> 90    89 0.3658665 0.5219475973 1.121859e-01 0.1821998 0.64979627 1.680040e-01 #> 91    90 0.3605513 0.5254190909 1.140296e-01 0.1800213 0.65053478 1.694439e-01 #> 92    91 0.3553874 0.5287602977 1.158523e-01 0.1779545 0.65119739 1.708481e-01 #> 93    92 0.3503727 0.5319738418 1.176535e-01 0.1759949 0.65178802 1.722170e-01 #> 94    93 0.3455052 0.5350624143 1.194324e-01 0.1741386 0.65231045 1.735510e-01 #> 95    94 0.3407827 0.5380287623 1.211886e-01 0.1723813 0.65276833 1.748503e-01 #> 96    95 0.3362028 0.5408756796 1.229215e-01 0.1707193 0.65316522 1.761155e-01 #> 97    96 0.3317633 0.5436059976 1.246307e-01 0.1691486 0.65350452 1.773468e-01 #> 98    97 0.3274618 0.5462225761 1.263156e-01 0.1676655 0.65378955 1.785449e-01 #> 99    98 0.3232957 0.5487282953 1.279760e-01 0.1662664 0.65402347 1.797101e-01 #> 100   99 0.3192624 0.5511260487 1.296115e-01 0.1649477 0.65420934 1.808429e-01 #> 101  100 0.3153595 0.5534187353 1.312218e-01 0.1637060 0.65435010 1.819439e-01 #> 102  101 0.3115842 0.5556092533 1.328065e-01 0.1625380 0.65444856 1.830135e-01 #> 103  102 0.3079340 0.5577004941 1.343655e-01 0.1614403 0.65450743 1.840522e-01 #> 104  103 0.3044061 0.5596953363 1.358985e-01 0.1604100 0.65452931 1.850607e-01 #> 105  104 0.3009979 0.5615966410 1.374054e-01 0.1594440 0.65451667 1.860394e-01 #> 106  105 0.2977067 0.5634072464 1.388861e-01 0.1585393 0.65447188 1.869888e-01 #> 107  106 0.2945296 0.5651299640 1.403404e-01 0.1576931 0.65439721 1.879096e-01 #> 108  107 0.2914642 0.5667675744 1.417683e-01 0.1569028 0.65429483 1.888024e-01 #> 109  108 0.2885075 0.5683228237 1.431696e-01 0.1561656 0.65416678 1.896676e-01 #> 110  109 0.2856570 0.5697984204 1.445445e-01 0.1554791 0.65401504 1.905058e-01 #> 111  110 0.2829100 0.5711970324 1.458929e-01 0.1548408 0.65384148 1.913177e-01 #> 112  111 0.2802638 0.5725212844 1.472149e-01 0.1542483 0.65364787 1.921038e-01 #> 113  112 0.2777157 0.5737737559 1.485105e-01 0.1536994 0.65343590 1.928647e-01 #> 114  113 0.2752632 0.5749569789 1.497798e-01 0.1531920 0.65320717 1.936008e-01 #> 115  114 0.2729037 0.5760734363 1.510229e-01 0.1527239 0.65296321 1.943129e-01 #> 116  115 0.2706345 0.5771255608 1.522399e-01 0.1522930 0.65270544 1.950015e-01 #> 117  116 0.2684532 0.5781157329 1.534311e-01 0.1518976 0.65243524 1.956671e-01 #> 118  117 0.2663573 0.5790462808 1.545964e-01 0.1515357 0.65215389 1.963104e-01 #> 119  118 0.2643443 0.5799194788 1.557363e-01 0.1512056 0.65186260 1.969318e-01 #> 120  119 0.2624117 0.5807375474 1.568507e-01 0.1509056 0.65156252 1.975319e-01 #> 121  120 0.2605573 0.5815026521 1.579400e-01 0.1506340 0.65125473 1.981113e-01 #> 122  121 0.2587786 0.5822169037 1.590045e-01 0.1503892 0.65094026 1.986705e-01 #> 123  122 0.2570734 0.5828823582 1.600442e-01 0.1501699 0.65062005 1.992101e-01 #> 124  123 0.2554394 0.5835010163 1.610595e-01 0.1499745 0.65029501 1.997305e-01 #> 125  124 0.2538744 0.5840748239 1.620507e-01 0.1498017 0.64996599 2.002323e-01 #> 126  125 0.2523762 0.5846056723 1.630181e-01 0.1496502 0.64963376 2.007160e-01 #> 127  126 0.2509427 0.5850953985 1.639619e-01 0.1495187 0.64929908 2.011822e-01 #> 128  127 0.2495718 0.5855457857 1.648824e-01 0.1494061 0.64896263 2.016312e-01 #> 129  128 0.2482615 0.5859585635 1.657799e-01 0.1493112 0.64862506 2.020637e-01 #> 130  129 0.2470097 0.5863354092 1.666549e-01 0.1492329 0.64828697 2.024801e-01 #> 131  130 0.2458146 0.5866779477 1.675075e-01 0.1491703 0.64794893 2.028808e-01 #> 132  131 0.2446742 0.5869877526 1.683381e-01 0.1491222 0.64761145 2.032664e-01 #> 133  132 0.2435866 0.5872663472 1.691470e-01 0.1490878 0.64727501 2.036372e-01 #> 134  133 0.2425501 0.5875152046 1.699347e-01 0.1490662 0.64694006 2.039938e-01 #> 135  134 0.2415629 0.5877357495 1.707014e-01 0.1490565 0.64660702 2.043365e-01 #> 136  135 0.2406232 0.5879293584 1.714475e-01 0.1490579 0.64627626 2.046659e-01 #> 137  136 0.2397294 0.5880973608 1.721732e-01 0.1490696 0.64594814 2.049822e-01 #> 138  137 0.2388798 0.5882410400 1.728791e-01 0.1490910 0.64562297 2.052860e-01 #> 139  138 0.2380729 0.5883616346 1.735654e-01 0.1491213 0.64530104 2.055777e-01 #> 140  139 0.2373071 0.5884603386 1.742325e-01 0.1491598 0.64498263 2.058575e-01 #> 141  140 0.2365809 0.5885383032 1.748808e-01 0.1492060 0.64466798 2.061260e-01 #> 142  141 0.2358928 0.5885966376 1.755106e-01 0.1492592 0.64435730 2.063834e-01 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 359 rows ]"}]
